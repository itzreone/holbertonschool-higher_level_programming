=============================
Test cases for matrix_divided
=============================

:param matrix: list
:param div: int
:return: list

>>> matrix = [
... 	[1, 2, 3],
... 	[4, 5, 6]
... ]

>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided(matrix, "hbtn")
Traceback (most recent call last):
        ...
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix = "reone"

>>> matrix_divided(matrix, 21)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
... 	[1, 2],
... 	[3, 4, 5]
... ]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'